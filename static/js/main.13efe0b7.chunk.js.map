{"version":3,"sources":["Card.js","Deck.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","_transform","style","transform","this","className","src","image","alt","name","Component","API_BASE_URL","Deck","state","deck","drawn","getCard","bind","a","axios","get","setState","data","deck_id","cardUrl","cardRes","success","Error","card","cards","st","id","code","value","suit","alert","map","c","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAwBeA,E,kDArBb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GALf,OAMjB,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DJ,EAA5D,QANiB,E,0CASnB,WACE,OACE,qBACEM,MAAO,CAAEC,UAAWC,KAAKH,YACzBI,UAAU,OACVC,IAAKF,KAAKT,MAAMY,MAChBC,IAAKJ,KAAKT,MAAMc,W,GAhBLC,a,yBCGbC,EAAe,0CAyDNC,E,kDAtDb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CAAEC,KAAM,KAAMC,MAAO,IAClC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAHE,E,4FAKnB,4BAAAC,EAAA,sEACmBC,IAAMC,IAAN,UAAaT,EAAb,kBADnB,OACMG,EADN,OAEEV,KAAKiB,SAAS,CAAEP,KAAMA,EAAKQ,OAF7B,gD,kHAIA,kCAAAJ,EAAA,6DACMK,EAAUnB,KAAKS,MAAMC,KAAKS,QADhC,SAGQC,EAHR,UAGqBb,EAHrB,YAGqCY,EAHrC,mBAIwBJ,IAAMC,IAAII,GAJlC,WAIQC,EAJR,QAKiBH,KAAKI,QALtB,sBAMY,IAAIC,MAAM,sBANtB,OASQC,EAAOH,EAAQH,KAAKO,MAAM,GAE9BzB,KAAKiB,UAAS,SAAAS,GAAE,MAAK,CACnBf,MAAM,GAAD,mBACAe,EAAGf,OADH,CAEH,CACEgB,GAAIH,EAAKI,KACTzB,MAAOqB,EAAKrB,MACZE,KAAK,GAAD,OAAKmB,EAAKK,MAAV,eAAsBL,EAAKM,aAjBzC,kDAsBIC,MAAM,EAAD,IAtBT,0D,0EA0BA,WAGE,IAAMN,EAAQzB,KAAKS,MAAME,MAAMqB,KAAI,SAAAC,GAAC,OAClC,cAAC,EAAD,CAAiB5B,KAAM4B,EAAE5B,KAAMF,MAAO8B,EAAE9B,OAA7B8B,EAAEN,OAEf,OACE,sBAAK1B,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,mDACA,oBAAIA,UAAU,sBAAd,iEACA,wBAAQA,UAAU,WAAWiC,QAASlC,KAAKY,QAA3C,uBAGA,qBAAKX,UAAU,gBAAf,SAAgCwB,W,GAjDrBnB,aCMJ6B,G,kKATb,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUK,cCSH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.13efe0b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.css\";\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    //transform:translate(10px,20px) rotate(20deg)\n    let angle = Math.random() * 90 - 45;\n    let xPos = Math.random() * 40 - 20;\n    let yPos = Math.random() * 40 - 20;\n    this._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\n  }\n\n  render() {\n    return (\n      <img\n        style={{ transform: this._transform }}\n        className=\"Card\"\n        src={this.props.image}\n        alt={this.props.name}\n      ></img>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport \"./Deck.css\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"https://www.deckofcardsapi.com/api/deck\";\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { deck: null, drawn: [] };\n    this.getCard = this.getCard.bind(this);\n  }\n  async componentDidMount() {\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\n    this.setState({ deck: deck.data });\n  }\n  async getCard() {\n    let deck_id = this.state.deck.deck_id;\n    try {\n      let cardUrl = `${API_BASE_URL}/${deck_id}/draw/`;\n      let cardRes = await axios.get(cardUrl);\n      if (!cardRes.data.success) {\n        throw new Error(\"No card remaining!\");\n      }\n\n      let card = cardRes.data.cards[0];\n      //setState to update the drawn array\n      this.setState(st => ({\n        drawn: [\n          ...st.drawn,\n          {\n            id: card.code,\n            image: card.image,\n            name: `${card.value} of ${card.suit}`\n          }\n        ]\n      }));\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  render() {\n    //map over all drawn cards from this.state\n    //and create new card component from each one\n    const cards = this.state.drawn.map(c => (\n      <Card key={c.id} name={c.name} image={c.image} />\n    ));\n    return (\n      <div className=\"Deck\">\n        <h1 className=\"Deck-title\">üÉë card dealer üÉÅ</h1>\n        <h2 className=\"Deck-title subtitle\">‚ô†Ô∏é A project made with React ‚ô¶Ô∏é</h2>\n        <button className=\"Deck-btn\" onClick={this.getCard}>\n          get card!\n        </button>\n        <div className=\"Deck-cardarea\">{cards}</div>\n      </div>\n    );\n  }\n}\n\nexport default Deck;\n","import React, { Component } from \"react\";\nimport Deck from \"./Deck\";\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Deck />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}